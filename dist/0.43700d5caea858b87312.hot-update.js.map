{"version":3,"sources":["webpack:///./src/Diagnostics.jsx?de26"],"names":["Diagnostics","Component","constructor","props","state","text","host","port","command","response","onHostChange","bind","onPortChange","onCommandChange","sendTelnetTest","componentDidMount","componentWillUnmount","event","setState","target","value","console","log","render"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AAGA;;;;;;AACA;;AAEe,OAAMA,WAAN,SAA0B,gBAAMC,SAAhC,CAA0C;;AAEzDC,cAAYC,KAAZ,EAAkB;AACb,SAAMA,KAAN;AACJ,QAAKC,KAAL,GAAa;AACZC,UAAM,EADM;AAEZC,UAAM,WAFM;AAGZC,UAAM,IAHM;AAIZC,aAAS,KAJG;AAKZC,cAAU;AALE,IAAb;AAOA,QAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,QAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,QAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,QAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACA;AACDI,sBAAoB;AACnB;;;;;;;AAOA;AACDC,yBAAuB;AACtB;AACA;AACDJ,eAAaK,KAAb,EAAoB;AAChB,QAAKC,QAAL,CAAc,EAAEX,MAAMU,MAAME,MAAN,CAAaC,KAArB,EAAd;AACF;AACDV,eAAaO,KAAb,EAAoB;AACjB,QAAKC,QAAL,CAAc,EAAEZ,MAAMW,MAAME,MAAN,CAAaC,KAArB,EAAd;AACF;AACDP,kBAAgBI,KAAhB,EAAuB;AACpB,QAAKC,QAAL,CAAc,EAAEV,SAASS,MAAME,MAAN,CAAaC,KAAxB,EAAd;AACF;AACFN,mBAAiB;AACfO,WAAQC,GAAR,CAAY,qBAAZ;AACA;AACD;AACAC,WAAS;AACR,UACD;AAAA;AAAA;AACC;AAAA;AAAA,OAAM,kBAAkB,CAAxB,EAA2B,IAAG,mBAA9B;AACE;AAAA;AAAA,QAAK,UAAU,YAAf,EAA6B,OAAM,QAAnC;AACE;AADF,MADF;AAIE,0DAAK,UAAU,SAAf,EAA0B,OAAM,KAAhC,GAJF;AAOE,0DAAK,UAAU,UAAf,EAA2B,OAAM,MAAjC,GAPF;AAUE,0DAAK,UAAU,SAAf,EAA0B,OAAM,KAAhC;AAVF;AADD,IADC;AAkBC;AA5DsD;mBAApCvB,W;AALrB;AACA,iD","file":"0.43700d5caea858b87312.hot-update.js","sourcesContent":["import React from 'react';\r\nimport 'isomorphic-fetch';\r\nimport { Button, FormGroup, FormControl, ControlLabel, Form, Row, Col, Nav, NavItem, NavDropdown, MenuItem, ButtonToolbar, Tabs, Tab, TabContainer, TabContent, TabPane} from 'react-bootstrap';\r\n//import { SocketProvider } from 'socket.io-react';\r\n//import SocketIOClient from 'socket.io-client';\r\nimport TelnetDiagnostics from './TelnetDiagnostics.jsx';\r\n//let socket;\r\n\r\nexport default class Diagnostics extends React.Component {\r\n \r\nconstructor(props){\r\n    \tsuper(props);\r\n\tthis.state = {\r\n\t\ttext: '',\r\n\t\thost: '127.0.0.1',\r\n\t\tport: 5250,\r\n\t\tcommand: \"cls\",\r\n\t\tresponse: '',\r\n\t}\r\n\tthis.onHostChange = this.onHostChange.bind(this);\r\n\tthis.onPortChange = this.onPortChange.bind(this);\r\n\tthis.onCommandChange = this.onCommandChange.bind(this);\r\n\tthis.sendTelnetTest = this.sendTelnetTest.bind(this);\r\n}\r\ncomponentDidMount() {\r\n\t/*socket = SocketIOClient();\r\n\tsocket.on(this.props.location.pathname, (mesg) => {\r\n\t\tthis.setState({text: mesg});\r\n\t});\r\n\tsocket.on('telnet-response', (mesg) => {\r\n\t\tthis.setState({response: mesg});\r\n\t});*/\r\n}\r\ncomponentWillUnmount() {\r\n\t//socket.off(this.props.page);\r\n}\r\nonPortChange(event) {\r\n    this.setState({ port: event.target.value });\r\n }\r\n onHostChange(event) {\r\n    this.setState({ host: event.target.value });\r\n }\r\n onCommandChange(event) {\r\n    this.setState({ command: event.target.value });\r\n }\r\nsendTelnetTest() {\r\n  console.log(\"sending Telnet Test\");\r\n  //socket.emit('diagnostics-send-telnet', { host: this.state.host, port: this.state.port, command: this.state.command});\r\n}\r\n render() {\r\n \treturn (\r\n\t<div>\r\n\t\t<Tabs defaultActiveKey={2} id=\"uncontrolled-tabs\">\r\n\t\t  <Tab eventKey={\"telnet-tab\"} title=\"Telnet\">\r\n\t\t    <TelnetDiagnostics />\r\n\t\t  </Tab>\r\n\t\t  <Tab eventKey={\"dmx-tab\"} title=\"DMX\">\r\n\t\t   \r\n\t\t  </Tab>\r\n\t\t  <Tab eventKey={\"midi-tab\"} title=\"MIDI\">\r\n\t\t    \r\n\t\t  </Tab>\r\n\t\t  <Tab eventKey={\"osc-tab\"} title=\"OSC\">\r\n\t\t    \r\n\t\t  </Tab>\r\n\t\t</Tabs>\r\n\t</div>\r\n    );\r\n  };\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Diagnostics.jsx"],"sourceRoot":""}