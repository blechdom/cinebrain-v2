{"version":3,"sources":["webpack:///./server/index.js?d43f"],"names":["install","atem1me","atemTV1","atemTV2","connect","midiOutA","appModule","require","db","server","websocket","UDPserver","UDPclient","PTZ_init","Buffer","from","PTZ_network_setting","PTZ_change_IP_Enquiry","PTZ_change_IP","PTZ_camera_on","PTZ_camera_off","then","connection","createServer","setDb","on","app","listen","console","log","current_universe","collection","findOne","err","result","dmx_data","close","JSON","stringify","dmx_usb_pro","createSocket","stack","msg","rinfo","address","port","bind","socket","id","data","host","command","runTelnet","message","changeProgramInput","changePreviewInput","changeTransitionPosition","autoTransition","changeTransitionType","atem1md","runMacro","sockets","emit","buffer","update","universe","save","_id","updateAll","UDPmessage","send","controller","value","channel","number","telnetHost","telnetPort","params","timeout","negotiationMandatory","ors","waitfor","res","trim","telnetResponse","catch","error","module","hot","accept","removeListener"],"mappings":";;;;;;;;AAAA;;;;AAEA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAVA,4BAAiBA,OAAjB;;;AAYA,KAAIC,UAAU,oBAAd;AACA,KAAIC,UAAU,oBAAd;AACA,KAAIC,UAAU,oBAAd;;AAEA;AACAD,SAAQE,OAAR,CAAgB,gBAAhB;AACA;AACA,KAAIC,QAAJ;AACA;;AAEA,KAAIC,YAAY,mBAAAC,CAAQ,EAAR,CAAhB;AACA,KAAIC,EAAJ;AACA,KAAIC,MAAJ;AACA,KAAIC,SAAJ;AACA,KAAIC,SAAJ;AACA,KAAIC,SAAJ;;AAEA,OAAMC,WAAWC,OAAOC,IAAP,CAAY,oBAAZ,EAAkC,KAAlC,CAAjB;AACA,OAAMC,sBAAsBF,OAAOC,IAAP,CAAY,wDAAZ,EAAsE,KAAtE,CAA5B;AACA,OAAME,wBAAwBH,OAAOC,IAAP,CAAY,8BAAZ,EAA4C,KAA5C,CAA9B;AACA,OAAMG,gBAAgBJ,OAAOC,IAAP,CAAY,0JAAZ,EAAwK,KAAxK,CAAtB;AACA,OAAMI,gBAAgBL,OAAOC,IAAP,CAAY,8BAAZ,EAA4C,KAA5C,CAAtB;AACA,OAAMK,iBAAiBN,OAAOC,IAAP,CAAY,8BAAZ,EAA4C,KAA5C,CAAvB;;AAEA;;AAEA,sBAAYX,OAAZ,CAAoB,+BAApB,EAAqDiB,IAArD,CAA0DC,cAAc;AACtEd,QAAKc,UAAL;AACAb,YAAS,eAAKc,YAAL,EAAT;AACAjB,aAAUkB,KAAV,CAAgBhB,EAAhB;AACAC,UAAOgB,EAAP,CAAU,SAAV,EAAqBnB,UAAUoB,GAA/B;AACAjB,UAAOkB,MAAP,CAAc,EAAd,EAAkB,MAAM;AACtBC,aAAQC,GAAR,CAAY,wBAAZ;AACD,IAFD;;AAKA,OAAIC,gBAAJ,CAVsE,CAUhD;AACtBtB,MAAGuB,UAAH,CAAc,qBAAd,EAAqCC,OAArC,CAA6C,EAA7C,EAAiD,UAASC,GAAT,EAAcC,MAAd,EAAsB;AACrE,SAAID,GAAJ,EAAS,MAAMA,GAAN;AACTH,wBAAmBI,OAAOC,QAA1B;AACAP,aAAQC,GAAR,CAAYK,OAAOC,QAAnB;AACA3B,QAAG4B,KAAH;AACD,IALD;AAMAR,WAAQC,GAAR,CAAY,yBAAyBQ,KAAKC,SAAL,CAAeR,gBAAf,CAArC;AACA,OAAIS,cAAc,0BAAQ,MAAR,EAAgBT,gBAAhB,CAAlB;;AAEAnB,eAAY,gBAAM6B,YAAN,CAAmB,MAAnB,CAAZ;AACA5B,eAAY,gBAAM4B,YAAN,CAAmB,MAAnB,CAAZ;;AAEA7B,aAAUc,EAAV,CAAa,OAAb,EAAuBQ,GAAD,IAAS;AAC/BL,aAAQC,GAAR,CAAa,sBAAqBI,IAAIQ,KAAM,EAA5C;AACA9B,eAAUyB,KAAV;AACC,IAHD;;AAKAzB,aAAUc,EAAV,CAAa,SAAb,EAAwB,CAACiB,GAAD,EAAMC,KAAN,KAAgB;AACtCf,aAAQC,GAAR,CAAa,mBAAkBa,GAAI,SAAQC,MAAMC,OAAQ,IAAGD,MAAME,IAAK,EAAvE;AACD,IAFD;;AAIAlC,aAAUc,EAAV,CAAa,WAAb,EAA0B,MAAM;AAC9B,WAAMmB,UAAU,gBAAhB;AACAhB,aAAQC,GAAR,CAAa,wBAAuBe,QAAQA,OAAQ,IAAGA,QAAQC,IAAK,EAApE;AACD,IAHD;;AAKA;;;;;;;AAOD;;;;AAIClC,aAAUmC,IAAV,CAAe,KAAf;;AAEApC,eAAY,sBAASD,MAAT,CAAZ;AACAC,aAAUe,EAAV,CAAa,YAAb,EAA4BsB,MAAD,IAAY;;AAEjCnB,aAAQC,GAAR,CAAY,0BAA0BkB,OAAOC,EAA7C;;AAEAD,YAAOtB,EAAP,CAAU,YAAV,EAAwB,MAAM;AACtBG,eAAQC,GAAR,CAAY,mBAAZ;AACP,MAFD;AAGAkB,YAAOtB,EAAP,CAAU,yBAAV,EAAqC,UAASwB,IAAT,EAAe;AAC5CrB,eAAQC,GAAR,CAAY,8BAA8BoB,KAAKC,IAAnC,GAA0C,GAA1C,GAAgDD,KAAKJ,IAArD,GAA4D,KAA5D,GAAoEI,KAAKE,OAArF;AACAC,iBAAUH,KAAKC,IAAf,EAAqBD,KAAKJ,IAA1B,EAAgCI,KAAKE,OAArC;AACP,MAHD;AAIAJ,YAAOtB,EAAP,CAAU,+BAAV,EAA2C,UAASwB,IAAT,EAAe;AAClDrB,eAAQC,GAAR,CAAY,8BAA8BoB,KAAKC,IAAnC,GAA0C,GAA1C,GAAgDD,KAAKJ,IAArD,GAA4D,KAA5D,GAAoEI,KAAKE,OAArF;AACAC,iBAAUH,KAAKC,IAAf,EAAqBD,KAAKJ,IAA1B,EAAgCI,KAAKE,OAArC;AACP,MAHD;AAIAJ,YAAOtB,EAAP,CAAU,4BAAV,EAAyC4B,OAAD,IAAa;AAC7CzB,eAAQC,GAAR,CAAY,gDAAgDwB,OAA5D;AACApD,eAAQqD,kBAAR,CAA2BD,OAA3B;AACP,MAHD;AAIAN,YAAOtB,EAAP,CAAU,4BAAV,EAAyC4B,OAAD,IAAa;AAC7CzB,eAAQC,GAAR,CAAY,gDAAgDwB,OAA5D;AACApD,eAAQsD,kBAAR,CAA2BF,OAA3B;AACP,MAHD;AAIAN,YAAOtB,EAAP,CAAU,4BAAV,EAAyC4B,OAAD,IAAa;AAC7CzB,eAAQC,GAAR,CAAY,+CAA+CwB,OAA3D;AACAnD,eAAQoD,kBAAR,CAA2BD,OAA3B;AACP,MAHD;AAIAN,YAAOtB,EAAP,CAAU,4BAAV,EAAyC4B,OAAD,IAAa;AAC7CzB,eAAQC,GAAR,CAAY,+CAA+CwB,OAA3D;AACAnD,eAAQqD,kBAAR,CAA2BF,OAA3B;AACP,MAHD;AAIAN,YAAOtB,EAAP,CAAU,6BAAV,EAA0C4B,OAAD,IAAa;AAC9CzB,eAAQC,GAAR,CAAY,+CAA+CwB,OAA3D;AACAnD,eAAQsD,wBAAR,CAAiCH,OAAjC;AACP,MAHD;AAICN,YAAOtB,EAAP,CAAU,wBAAV,EAAqC4B,OAAD,IAAa;AAC1CzB,eAAQC,GAAR,CAAY,+CAA+CwB,OAA3D;AACAnD,eAAQuD,cAAR;AACP,MAHA;AAICV,YAAOtB,EAAP,CAAU,wBAAV,EAAqC4B,OAAD,IAAa;AAC3CzB,eAAQC,GAAR,CAAY,+CAA+CwB,OAA3D;AACAnD,eAAQwD,oBAAR,CAA6BL,OAA7B;AACP,MAHC;AAIFN,YAAOtB,EAAP,CAAU,4BAAV,EAAyC4B,OAAD,IAAa;AAC7CzB,eAAQC,GAAR,CAAY,+CAA+CwB,OAA3D;AACAlD,eAAQmD,kBAAR,CAA2BD,OAA3B;AACP,MAHD;AAIAN,YAAOtB,EAAP,CAAU,4BAAV,EAAyC4B,OAAD,IAAa;AAC7CzB,eAAQC,GAAR,CAAY,+CAA+CwB,OAA3D;AACAlD,eAAQoD,kBAAR,CAA2BF,OAA3B;AACP,MAHD;AAICN,YAAOtB,EAAP,CAAU,kBAAV,EAA+B4B,OAAD,IAAa;AACpCzB,eAAQC,GAAR,CAAY,gDAAgDwB,OAA5D;AACIM,eAAQC,QAAR,CAAiB,CAAjB;AACA3D,eAAQ2D,QAAR,CAAiBP,OAAjB;AACX,MAJA;AAKDN,YAAOtB,EAAP,CAAU,aAAV,EAA0B4B,OAAD,IAAa;AAClCzB,eAAQC,GAAR,CAAY,2BAA2BwB,OAAvC;AACA3C,iBAAUmD,OAAV,CAAkBC,IAAlB,CAAuB,iBAAvB,EAA0CT,OAA1C;AACH,MAHD;AAIAN,YAAOtB,EAAP,CAAU,gBAAV,EAA6BsC,MAAD,IAAY;AAChCnC,eAAQC,GAAR,CAAY,8BAA8BkC,MAA1C;AACArD,iBAAUmD,OAAV,CAAkBC,IAAlB,CAAuB,uBAAvB,EAAgDC,MAAhD;AACP,MAHD;AAIAhB,YAAOtB,EAAP,CAAU,QAAV,EAAqBsC,MAAD,IAAY;AACxBxB,mBAAYyB,MAAZ,CAAmBD,MAAnB;AACAnC,eAAQC,GAAR,CAAY,aAAaQ,KAAKC,SAAL,CAAeyB,MAAf,CAAzB;AACAnC,eAAQC,GAAR,CAAY,kBAAkBQ,KAAKC,SAAL,CAAeC,YAAY0B,QAA3B,CAA9B;AACAzD,UAAGuB,UAAH,CAAc,qBAAd,EAAqCmC,IAArC,CAA0C,EAACC,KAAI,qBAAL,EAA4BhC,UAASI,YAAY0B,QAAjD,EAA1C;AACP,MALD;AAMAlB,YAAOtB,EAAP,CAAU,SAAV,EAAsBsC,MAAD,IAAY;AACzBxB,mBAAY6B,SAAZ,CAAsBL,MAAtB;AACP,MAFD;AAGAhB,YAAOtB,EAAP,CAAU,QAAV,EAAoB,UAASwB,IAAT,EAAe;AAC3B,WAAIoB,aAAavD,OAAOC,IAAP,CAAYkC,KAAKc,MAAjB,EAAyB,KAAzB,CAAjB;AACAnD,iBAAU0D,IAAV,CAAezD,QAAf,EAAyBoC,KAAKJ,IAA9B,EAAoCI,KAAKC,IAAzC,EAAgDjB,GAAD,IAAS;AACtDrB,mBAAU0D,IAAV,CAAeD,UAAf,EAA2BpB,KAAKJ,IAAhC,EAAsCI,KAAKC,IAA3C,EAAkDjB,GAAD,IAAS;AAC1DL,mBAAQC,GAAR,CAAY,kBAAkBoB,KAAKc,MAAvB,GAAgC,QAAhC,GAA2C9B,GAAvD;AACC,UAFD;AAGD,QAJD;AAKP,MAPD;AAQAc,YAAOtB,EAAP,CAAU,SAAV,EAAqB,UAASwB,IAAT,EAAe;AAC9B5C,gBAASiE,IAAT,CAAc,IAAd,EAAoB;AAClBC,qBAAYtB,KAAKsB,UADC;AAElBC,gBAAOvB,KAAKuB,KAFM;AAGlBC,kBAASxB,KAAKwB;AAHI,QAApB;AAKL,MAND;AAOA1B,YAAOtB,EAAP,CAAU,cAAV,EAA0B,UAASwB,IAAT,EAAe;AACnC5C,gBAASiE,IAAT,CAAc,SAAd,EAAyB;AACvBI,iBAAQzB,KAAKyB,MADU;AAEvBD,kBAASxB,KAAKwB;AAFS,QAAzB;AAIL,MALD;;AAOA,WAAME,aAAa,WAAnB;AACA,WAAMC,aAAa,IAAnB;;AAEA,cAASxB,SAAT,CAAmBuB,UAAnB,EAA+BC,UAA/B,EAA2CzB,OAA3C,EAAoD;AAClD,WAAI7B,aAAa,4BAAjB;;AAEA,WAAIuD,SAAS;AACT3B,eAAMyB,UADG;AAET9B,eAAM+B,UAFG;AAGTE,kBAAS,IAHA;AAITC,+BAAsB,KAJb;AAKTC,cAAK,MALI;AAMTC,kBAAS;AANA,QAAb;AAQA3D,kBAAWG,EAAX,CAAc,SAAd,EAAyB,YAAW;AAChCH,oBAAWgD,IAAX,CAAgBnB,OAAhB,EAAyB,UAASlB,GAAT,EAAciD,GAAd,EAAmB;AACxC,eAAIjD,GAAJ,EAAS,OAAOA,GAAP;;AAETL,mBAAQC,GAAR,CAAY,gBAAZ,EAA8BqD,IAAIC,IAAJ,EAA9B;;AAEAC,0BAAeF,GAAf;;AAEA5D,sBAAWgD,IAAX,CAAgB,EAAhB,EAAoB;AAChBU,kBAAK,MADW;AAEhBC,sBAAS;AAFO,YAApB,EAGG,UAAShD,GAAT,EAAciD,GAAd,EAAmB;AACpB,iBAAIjD,GAAJ,EAAS,OAAOA,GAAP;;AAEPL,qBAAQC,GAAR,CAAY,iBAAZ,EAA+BqD,GAA/B;AACH,YAPD;AAQH,UAfD;AAgBH,QAjBD;;AAmBA5D,kBAAWlB,OAAX,CAAmByE,MAAnB;AACD;;AAED,cAASO,cAAT,CAAyBF,GAAzB,EAA8B;AAC5BxE,iBAAUmD,OAAV,CAAkBC,IAAlB,CAAuB,iBAAvB,EAA0CoB,GAA1C;AACD;AACN,IAtID;AAwID,EA3LD,EA2LGG,KA3LH,CA2LSC,SAAS;AAChB1D,WAAQC,GAAR,CAAY,QAAZ,EAAsByD,KAAtB;AACD,EA7LD;;AA+LA;;AAEA,KAAI,IAAJ,EAAgB;AACdC,UAAOC,GAAP,CAAWC,MAAX,CAAkB,EAAlB,EAAiC,MAAM;AACrChF,YAAOiF,cAAP,CAAsB,SAAtB,EAAiCpF,UAAUoB,GAA3C;AACApB,iBAAY,mBAAAC,CAAQ,EAAR,CAAZ,CAFqC,CAEG;AACxCD,eAAUkB,KAAV,CAAgBhB,EAAhB;AACAC,YAAOgB,EAAP,CAAU,SAAV,EAAqBnB,UAAUoB,GAA/B;AACD,IALD;AAMD,E","file":"0.01f55bf4dd9f96769db0.hot-update.js","sourcesContent":["import SourceMapSupport from 'source-map-support';\r\nSourceMapSupport.install();\r\nimport 'babel-polyfill';\r\nimport http from 'http';\r\nimport { MongoClient } from 'mongodb';\r\nimport socketio from 'socket.io';\r\nimport telnet from 'telnet-client';\r\nimport DMX from './dmx_usb_pro.js';\r\nimport dgram from 'dgram';\r\nimport emptyFunction from 'fbjs/lib/emptyFunction';\r\nimport ATEM from 'applest-atem/lib/atem.js';\r\nimport easymidi from 'easymidi/index.js';\r\n\r\nlet atem1me = new ATEM();\r\nlet atemTV1 = new ATEM();\r\nlet atemTV2 = new ATEM();\r\n\r\n//atem1me.connect('192.168.10.240');\r\natemTV1.connect('192.168.10.240');\r\n//atemTV2.connect('192.168.10.242');\r\nvar midiOutA;\r\n//var midiOutA = new easymidi.Output('MIDIPLUS TBOX 2x2 1');\r\n\r\nlet appModule = require('./server.js');\r\nlet db;\r\nlet server;\r\nlet websocket;\r\nlet UDPserver;\r\nlet UDPclient;\r\n\r\nconst PTZ_init = Buffer.from('020000010000000001', 'hex');\r\nconst PTZ_network_setting = Buffer.from('02045d4b9d2eceff1921680102ff255255255000ffrobocam2ff03', 'hex');\r\nconst PTZ_change_IP_Enquiry = Buffer.from('02454e513a6e6574776f726b03ff', 'hex');\r\nconst PTZ_change_IP = Buffer.from('024d41433a30342d35642d34622d39642d32652d6365FF49504144523a3139322e3136382e31302e323030FF4d41534b3a3235352e3235352e302e30FF4e414d453a43414d4552413031FF03', 'hex');\r\nconst PTZ_camera_on = Buffer.from('010000060000000c8101040002ff', 'hex');\r\nconst PTZ_camera_off = Buffer.from('010000060000000c8101040003ff', 'hex');\r\n\r\n//atemTV1.on('connect', function() {     \r\n \r\nMongoClient.connect('mongodb://localhost/cinebrain').then(connection => {\r\n  db = connection;\r\n  server = http.createServer();\r\n  appModule.setDb(db);\r\n  server.on('request', appModule.app);\r\n  server.listen(80, () => {\r\n    console.log('App started on port 80');\r\n  });\r\n\r\n\r\n  let current_universe; // = new Buffer(512);\r\n  db.collection(\"last_known_universe\").findOne({}, function(err, result) {\r\n    if (err) throw err;\r\n    current_universe = result.dmx_data;\r\n    console.log(result.dmx_data);\r\n    db.close();\r\n  });\r\n  console.log(\"current_universe is \" + JSON.stringify(current_universe));\r\n  let dmx_usb_pro = new DMX('COM3', current_universe);\r\n\r\n  UDPserver = dgram.createSocket('udp4');\r\n  UDPclient = dgram.createSocket('udp4');\r\n\r\n  UDPserver.on('error', (err) => {\r\n  console.log(`UDP server error:\\n${err.stack}`);\r\n  UDPserver.close();\r\n  });\r\n\r\n  UDPserver.on('message', (msg, rinfo) => {\r\n    console.log(`UDP server got: ${msg} from ${rinfo.address}:${rinfo.port}`);\r\n  });\r\n\r\n  UDPserver.on('listening', () => {\r\n    const address = '192.168.10.101';\r\n    console.log(`UDP server listening ${address.address}:${address.port}`);\r\n  });\r\n\r\n  /*UDPclient.send(PTZ_init, 52381, '192.168.0.100', (err) => {\r\n    console.log(\"send message \" + PTZ_init + \" err: \" + err);\r\n    UDPclient.send(PTZ_camera_on, 52381, '192.168.0.100', (err) => {\r\n      console.log(\"send message \" + PTZ_camera_on + \" err: \" + err);\r\n    });\r\n  });\r\n*/\r\n /* UDPclient.send(PTZ_network_setting, 52380, '192.168.0.100', (err) => {\r\n    console.log(\"send message err: \" + err);\r\n  });\r\n*/\r\n  UDPserver.bind(62455);\r\n\r\n  websocket = socketio(server);\r\n  websocket.on('connection', (socket) => {\r\n   \r\n        console.log(\"user connected from: \" + socket.id);\r\n\r\n        socket.on('disconnect', () => {\r\n                console.log('user disconnected')\r\n        });\r\n        socket.on('diagnostics-send-telnet', function(data) {\r\n                console.log(\"received telnet command: \" + data.host + \":\" + data.port + \"-->\" + data.command);\r\n                runTelnet(data.host, data.port, data.command);\r\n        });\r\n        socket.on('control-interface-send-telnet', function(data) {\r\n                console.log(\"received telnet command: \" + data.host + \":\" + data.port + \"-->\" + data.command);\r\n                runTelnet(data.host, data.port, data.command);\r\n        });\r\n        socket.on('atem1me_changeProgramInput', (message) => {\r\n                console.log(\"received atem 1 m/e program input command: \" + message);\r\n                atem1me.changeProgramInput(message);\r\n        });\r\n        socket.on('atem1me_changePreviewInput', (message) => {\r\n                console.log(\"received atem 1 m/e preview input command: \" + message);\r\n                atem1me.changePreviewInput(message);\r\n        });\r\n        socket.on('atemTV1_changeProgramInput', (message) => {\r\n                console.log(\"received atem TV 1 program input command: \" + message);\r\n                atemTV1.changeProgramInput(message);\r\n        });\r\n        socket.on('atemTV1_changePreviewInput', (message) => {\r\n                console.log(\"received atem TV 1 preview input command: \" + message);\r\n                atemTV1.changePreviewInput(message);\r\n        });\r\n        socket.on('atemTV1_transition_position', (message) => {\r\n                console.log(\"received atem TV 1 preview input command: \" + message);\r\n                atemTV1.changeTransitionPosition(message);\r\n        });\r\n         socket.on('atemTV1_autoTransition', (message) => {\r\n                console.log(\"received atem TV 1 preview input command: \" + message);\r\n                atemTV1.autoTransition();\r\n        });\r\n          socket.on('atemTV1_transitionType', (message) => {\r\n                console.log(\"received atem TV 1 preview input command: \" + message);\r\n                atemTV1.changeTransitionType(message);\r\n        });\r\n        socket.on('atemTV2_changeProgramInput', (message) => {\r\n                console.log(\"received atem TV 2 program input command: \" + message);\r\n                atemTV2.changeProgramInput(message);\r\n        });\r\n        socket.on('atemTV2_changePreviewInput', (message) => {\r\n                console.log(\"received atem TV 2 preview input command: \" + message);\r\n                atemTV2.changePreviewInput(message);\r\n        });\r\n         socket.on('atem1me_runMacro', (message) => {\r\n                console.log(\"received atem 1 m/e preview input command: \" + message);\r\n                    atem1md.runMacro(2);\r\n                    atem1me.runMacro(message);\r\n        });\r\n        socket.on('device-menu', (message) => {\r\n            console.log(\"the device number is: \" + message);\r\n            websocket.sockets.emit(\"show-parameters\", message);\r\n        });\r\n        socket.on('parameter-menu', (buffer) => {\r\n                console.log(\"the parameter packet is: \" + buffer);\r\n                websocket.sockets.emit(\"show-parameter-inputs\", buffer);\r\n        }); \r\n        socket.on('dmx-go', (buffer) => {\r\n                dmx_usb_pro.update(buffer);\r\n                console.log(\"dmx-go: \" + JSON.stringify(buffer));\r\n                console.log(\"dmx_usb_pro: \" + JSON.stringify(dmx_usb_pro.universe));\r\n                db.collection('last_known_universe').save({_id:\"last_known_universe\", dmx_data:dmx_usb_pro.universe});\r\n        });     \r\n        socket.on('dmx-all', (buffer) => {\r\n                dmx_usb_pro.updateAll(buffer);\r\n        });     \r\n        socket.on('ptz-go', function(data) {\r\n                let UDPmessage = Buffer.from(data.buffer, 'hex');\r\n                UDPclient.send(PTZ_init, data.port, data.host, (err) => {\r\n                  UDPclient.send(UDPmessage, data.port, data.host, (err) => {\r\n                  console.log(\"send message \" + data.buffer + \" err: \" + err);\r\n                  });\r\n                });\r\n        });     \r\n        socket.on('midi-cc', function(data) {\r\n              midiOutA.send('cc', {\r\n                controller: data.controller,\r\n                value: data.value,\r\n                channel: data.channel\r\n              });\r\n        });\r\n        socket.on('midi-program', function(data) {\r\n              midiOutA.send('program', {\r\n                number: data.number,\r\n                channel: data.channel\r\n              });\r\n        });\r\n\r\n        const telnetHost = '127.0.0.1';\r\n        const telnetPort = 5250;\r\n\r\n        function runTelnet(telnetHost, telnetPort, command) {\r\n          var connection = new telnet();\r\n\r\n          var params = {\r\n              host: telnetHost,\r\n              port: telnetPort,\r\n              timeout: 1500,\r\n              negotiationMandatory: false,\r\n              ors: '\\r\\n', \r\n              waitfor: '\\n' \r\n          };\r\n          connection.on('connect', function() {\r\n              connection.send(command, function(err, res) {\r\n                  if (err) return err\r\n\r\n                  console.log('first message:', res.trim())\r\n\r\n                  telnetResponse(res);\r\n\r\n                  connection.send('', {\r\n                      ors: '\\r\\n',\r\n                      waitfor: '\\n'\r\n                  }, function(err, res) {\r\n                    if (err) return err\r\n\r\n                      console.log('resp after cmd:', res)\r\n                  })\r\n              })\r\n          })\r\n\r\n          connection.connect(params)\r\n        }\r\n\r\n        function telnetResponse (res) {\r\n          websocket.sockets.emit(\"telnet-response\", res);\r\n        }\r\n  });\r\n \r\n}).catch(error => {\r\n  console.log('ERROR:', error);\r\n});\r\n\r\n//});\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./server.js', () => {\r\n    server.removeListener('request', appModule.app);\r\n    appModule = require('./server.js');     // eslint-disable-line\r\n    appModule.setDb(db);\r\n    server.on('request', appModule.app);\r\n  });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./server/index.js"],"sourceRoot":""}