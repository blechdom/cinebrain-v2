{"version":3,"sources":["webpack:///./src/MIDIDiagnostics.jsx?edcc"],"names":["socket","MIDIDiagnostics","Component","constructor","props","context","state","channel","program_num","cc_num","cc_val","pitch_num","velocity","onMidiChannelChange","bind","onProgramNumChange","onCCNumChange","onCCValChange","sendProgramChangeTest","sendCCTest","componentDidMount","on","mesg","setState","response","componentWillUnmount","off","page","event","target","value","console","log","emit","number","controller","render"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;;;AACA,KAAIA,MAAJ;;AAEe,OAAMC,eAAN,SAA8B,gBAAMC,SAApC,CAA8C;;AAE7DC,eAAYC,KAAZ,EAAmBC,OAAnB,EAA2B;AACzB,WAAMD,KAAN,EAAaC,OAAb;AACA,UAAKC,KAAL,GAAa;AACTC,gBAAS,CADA;AAETC,oBAAa,CAFJ;AAGTC,eAAQ,CAHC;AAITC,eAAQ,CAJC;AAKTC,kBAAW,CALF;AAMTC,iBAAU;AAND,MAAb;AAQA,UAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,UAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACA,UAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAArB;AACA,UAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACA,UAAKI,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BJ,IAA3B,CAAgC,IAAhC,CAA7B;AACA,UAAKK,UAAL,GAAkB,KAAKA,UAAL,CAAgBL,IAAhB,CAAqB,IAArB,CAAlB;AACD;AACDM,uBAAoB;AAClBpB,cAAS,uBAAT;AACAA,YAAOqB,EAAP,CAAU,iBAAV,EAA8BC,IAAD,IAAU;AACrC,YAAKC,QAAL,CAAc,EAACC,UAAUF,IAAX,EAAd;AACD,MAFD;AAID;AACDG,0BAAuB;AACrBzB,YAAO0B,GAAP,CAAW,KAAKtB,KAAL,CAAWuB,IAAtB;AACD;AACDd,uBAAoBe,KAApB,EAA0B;AACxB,UAAKL,QAAL,CAAc,EAAEhB,SAASqB,MAAMC,MAAN,CAAaC,KAAxB,EAAd;AACD;AACDf,sBAAmBa,KAAnB,EAAyB;AACvB,UAAKL,QAAL,CAAc,EAAEf,aAAaoB,MAAMC,MAAN,CAAaC,KAA5B,EAAd;AACD;AACDd,iBAAcY,KAAd,EAAoB;AAClB,UAAKL,QAAL,CAAc,EAAEd,QAAQmB,MAAMC,MAAN,CAAaC,KAAvB,EAAd;AACD;AACDb,iBAAcW,KAAd,EAAoB;AAClB,UAAKL,QAAL,CAAc,EAAEb,QAAQkB,MAAMC,MAAN,CAAaC,KAAvB,EAAd;AACD;AACDZ,2BAAuB;AACrBa,aAAQC,GAAR,CAAY,qCAAZ;AACAhC,YAAOiC,IAAP,CAAY,cAAZ,EAA4B,EAACC,QAAO,KAAK5B,KAAL,CAAWE,WAAnB,EAAgCD,SAAQ,KAAKD,KAAL,CAAWC,OAAnD,EAA5B;AACD;AACDY,gBAAY;AACVY,aAAQC,GAAR,CAAY,yBAAZ;AACAhC,YAAOiC,IAAP,CAAY,SAAZ,EAAuB,EAACE,YAAY,KAAK7B,KAAL,CAAWG,MAAxB,EAAgCqB,OAAM,KAAKxB,KAAL,CAAWI,MAAjD,EAAyDH,SAAQ,KAAKD,KAAL,CAAWC,OAA5E,EAAvB;AACD;AACD6B,YAAS;AACP,YACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA,aAAM,gBAAN;AACE;AAAA;AAAA;AACE;AAAA;AAAA,iBAAK,4CAAL,EAAmC,IAAI,CAAvC;AAAA;AAAA,cADF;AAEE;AAAA;AAAA,iBAAK,IAAI,CAAT;AACE,4EAAa,MAAK,QAAlB,EAA2B,MAAK,SAAhC,EAA0C,OAAO,KAAK9B,KAAL,CAAWC,OAA5D,EAAqE,UAAU,KAAKM,mBAApF;AADF;AAFF,YADF;AAOE;AAAA;AAAA;AACE;AAAA;AAAA,iBAAK,4CAAL,EAAmC,IAAI,CAAvC;AAAA;AAAA,cADF;AAEE;AAAA;AAAA,iBAAK,IAAI,CAAT;AACE,4EAAa,MAAK,QAAlB,EAA2B,MAAK,aAAhC,EAA8C,OAAO,KAAKP,KAAL,CAAWE,WAAhE,EAA6E,UAAU,KAAKO,kBAA5F;AADF;AAFF,YAPF;AAaE;AAAA;AAAA;AACE;AAAA;AAAA,iBAAK,UAAU,CAAf,EAAkB,IAAI,CAAtB;AACE;AAAA;AAAA;AACE;AAAA;AAAA,qBAAQ,SAAQ,SAAhB,EAA0B,SAAS,KAAKG,qBAAxC;AAAA;AAAA;AADF;AADF;AADF,YAbF;AAoBE;AAAA;AAAA;AACE;AAAA;AAAA,iBAAK,4CAAL,EAAmC,IAAI,CAAvC;AAAA;AAAA,cADF;AAEE;AAAA;AAAA,iBAAK,IAAI,CAAT;AACE,4EAAa,MAAK,QAAlB,EAA2B,MAAK,QAAhC,EAAyC,OAAO,KAAKZ,KAAL,CAAWG,MAA3D,EAAmE,UAAU,KAAKO,aAAlF;AADF;AAFF,YApBF;AA0BE;AAAA;AAAA;AACE;AAAA;AAAA,iBAAK,4CAAL,EAAmC,IAAI,CAAvC;AAAA;AAAA,cADF;AAEE;AAAA;AAAA,iBAAK,IAAI,CAAT;AACE,4EAAa,MAAK,QAAlB,EAA2B,MAAK,QAAhC,EAAyC,OAAO,KAAKV,KAAL,CAAWI,MAA3D,EAAmE,UAAU,KAAKO,aAAlF;AADF;AAFF,YA1BF;AAgCE;AAAA;AAAA;AACE;AAAA;AAAA,iBAAK,UAAU,CAAf,EAAkB,IAAI,CAAtB;AACE;AAAA;AAAA;AACE;AAAA;AAAA,qBAAQ,SAAQ,SAAhB,EAA0B,SAAS,KAAKE,UAAxC;AAAA;AAAA;AADF;AADF;AADF;AAhCF;AADF;AADF,MADF;AA8CC;AAhG0D;mBAAxClB,e","file":"0.c27eacdfa96a745abc23.hot-update.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport _ from \"lodash\";\r\nimport 'isomorphic-fetch';\r\nimport {Button, FormGroup, FormControl, ControlLabel, Form, Row, Col, ButtonToolbar} from 'react-bootstrap';\r\nimport { SocketProvider } from 'socket.io-react';\r\nimport SocketIOClient from 'socket.io-client';\r\nlet socket;\r\n\r\nexport default class MIDIDiagnostics extends React.Component {\r\n\r\nconstructor(props, context){\r\n  super(props, context);\r\n  this.state = {\r\n      channel: 1,\r\n      program_num: 1,\r\n      cc_num: 1,\r\n      cc_val: 0,\r\n      pitch_num: 1,\r\n      velocity: 0,\r\n  };\r\n  this.onMidiChannelChange = this.onMidiChannelChange.bind(this);\r\n  this.onProgramNumChange = this.onProgramNumChange.bind(this);\r\n  this.onCCNumChange = this.onCCNumChange.bind(this);\r\n  this.onCCValChange = this.onCCValChange.bind(this);\r\n  this.sendProgramChangeTest = this.sendProgramChangeTest.bind(this);\r\n  this.sendCCTest = this.sendCCTest.bind(this);\r\n}\r\ncomponentDidMount() {\r\n  socket = SocketIOClient();\r\n  socket.on('telnet-response', (mesg) => {\r\n    this.setState({response: mesg});\r\n  });\r\n  \r\n}\r\ncomponentWillUnmount() {\r\n  socket.off(this.props.page);\r\n}\r\nonMidiChannelChange(event){\r\n  this.setState({ channel: event.target.value });\r\n}\r\nonProgramNumChange(event){\r\n  this.setState({ program_num: event.target.value });\r\n}\r\nonCCNumChange(event){\r\n  this.setState({ cc_num: event.target.value });\r\n}\r\nonCCValChange(event){\r\n  this.setState({ cc_val: event.target.value });\r\n}\r\nsendProgramChangeTest(){\r\n  console.log(\"sending MIDI Program Change test...\");\r\n  socket.emit('midi-program', {number:this.state.program_num, channel:this.state.channel});\r\n}\r\nsendCCTest(){\r\n  console.log(\"sending MIDI CC test...\");\r\n  socket.emit('midi-cc', {controller: this.state.cc_num, value:this.state.cc_val, channel:this.state.channel});\r\n}\r\nrender() {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Form horizontal>\r\n          <FormGroup>\r\n            <Col componentClass={ControlLabel} sm={3}>Channel</Col>\r\n            <Col sm={9}>\r\n              <FormControl type=\"number\" name=\"channel\" value={this.state.channel} onChange={this.onMidiChannelChange} />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Col componentClass={ControlLabel} sm={3}>Program Number</Col>\r\n            <Col sm={9}>\r\n              <FormControl type=\"number\" name=\"program_num\" value={this.state.program_num} onChange={this.onProgramNumChange} />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Col smOffset={3} sm={6}>\r\n              <ButtonToolbar>\r\n                <Button bsStyle=\"primary\" onClick={this.sendProgramChangeTest}>Send Program Change</Button>\r\n              </ButtonToolbar>\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Col componentClass={ControlLabel} sm={3}>Controller Number</Col>\r\n            <Col sm={9}>\r\n              <FormControl type=\"number\" name=\"cc_num\" value={this.state.cc_num} onChange={this.onCCNumChange} />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Col componentClass={ControlLabel} sm={3}>Controller Value</Col>\r\n            <Col sm={9}>\r\n              <FormControl type=\"number\" name=\"cc_val\" value={this.state.cc_val} onChange={this.onCCValChange} />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Col smOffset={3} sm={6}>\r\n              <ButtonToolbar>\r\n                <Button bsStyle=\"primary\" onClick={this.sendCCTest}>Send Continuous Controller Test</Button>\r\n              </ButtonToolbar>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/MIDIDiagnostics.jsx"],"sourceRoot":""}