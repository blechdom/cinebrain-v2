{"version":3,"sources":["webpack:///./src/ControllersSetup.jsx?c258"],"names":["ResponsiveReactGridLayout","generateLayout","item","i","y","Math","ceil","random","x","floor","w","h","toString","sliderValue","ControllerSetup","Component","constructor","props","context","state","currentBreakpoint","compactType","mounted","layouts","lg","initialLayout","onNewLayout","bind","handleSliderChange","event","componentDidMount","setState","generateDOM","styles","background","l","onBreakPointChange","breakpoint","currentBreakPoint","onLayoutChange","layout","console","log","render","cols","onBreakpointChange","defaultProps","className","rowHeight","md","sm","xs","xxs"],"mappings":"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","file":"0.9d3b25b2ec809b24ebc7.hot-update.js","sourcesContent":["import React, {PropTypes} from 'react'\nimport {Responsive, WidthProvider} from 'react-grid-layout';\nimport lomap from 'lodash.map'\nimport loresult from 'lodash.result'\nimport lorange from 'lodash.range'\nimport lorandom from 'lodash.random'\nimport 'isomorphic-fetch';\nimport { Link } from 'react-router';\nimport { Button, Glyphicon, Table, Panel } from 'react-bootstrap';\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nfunction generateLayout() {\n  return lomap( lorange(0, 25), function (item, i) {\n    var y = Math.ceil(Math.random() * 4) + 1;\n    return {\n      x: lorandom(0, 5) * 2 % 12,\n      y: Math.floor(i / 6) * y,\n      w: 2,\n      h: y,\n      i: i.toString(),\n      sliderValue: 50\n    };\n  });\n}\n\nexport default class ControllerSetup extends React.Component {\n\n  constructor(props, context){\n    super(props, context);\n\t this.state = {\n      currentBreakpoint: 'lg',\n      compactType: 'vertical',\n      mounted: false,\n      layouts: {lg: this.props.initialLayout},\n    };\n this.onNewLayout = this.onNewLayout.bind(this);  \n}\n handleSliderChange (event)  {\n\n   // this.setState({sliderValue: event.target.value});\n   // console.log(event.target.id + ': ' + this.state.i + ' ' + this.state.sliderValue);\n  }\n  componentDidMount() {\n    this.setState({\n      mounted: true\n    })\n  }\n\n  generateDOM() {\n\n    const styles = {\n      background: \"#eee\"\n    }\n\nreturn lomap(this.state.layouts.lg, (l, i) => {\n      return (\n        <div style={styles} key={i} className='static'>\n              <span className=\"text\">{i}</span> \n\t\t  <div id=\"slidecontainer\">\n                <input type=\"range\" min=\"1\" max=\"100\" value={this.state.sliderValue} className=\"slider\" id={i} ref={i} onChange={this.handleSliderChange}/>\n</div>\n        </div>\n      )\n    })\n  }\n\n  onBreakPointChange(breakpoint) {\n    this.setState({\n      currentBreakPoint: breakpoint\n    })\n  }\n\n  onLayoutChange(layout, layouts) {\n  console.log(layout, layouts);\n  }\n\n  onNewLayout() {\n    this.setState({\n      layouts: {\n        lg: generateLayout()\n      }\n    })\n  }\n\n  render() {\n  return (\n      <div>\n        <div>Current Breakpoint: {this.state.currentBreakpoint} ({this.props.cols[this.state.currentBreakpoint]} columns)\n        </div>\n        <button onClick={this.onNewLayout}>Generate New Layout</button>\n        <ResponsiveReactGridLayout\n          {...this.props}\n          layouts={this.state.layouts}\n          onBreakpointChange={this.onBreakpointChange}\n          onLayoutChange={this.onLayoutChange}\n measureBeforeMount={false}\n    useCSSTransforms={this.state.mounted}>\n          {this.generateDOM()}\n        </ResponsiveReactGridLayout>\n      </div>\n    )\n  }\n}\nControllerSetup.defaultProps = {\n    className: \"layout\",\n    rowHeight: 30,\n    onLayoutChange: function() {},\n    cols: {lg: 12, md: 10, sm: 6, xs: 4, xxs: 2},\n    initialLayout: generateLayout()\n}; \n\n\n\n// WEBPACK FOOTER //\n// ./src/ControllersSetup.jsx"],"sourceRoot":""}