{"version":3,"sources":["webpack:///./src/IssueList.jsx?e290"],"names":["IssueRow","props","onDeleteClick","deleteIssue","issue","_id","substr","status","owner","created","toDateString","effort","completionDate","title","propTypes","PropTypes","object","isRequired","func","IssueTable","issueRows","issues","map","array","IssueList","Component","dataFetcher","urlBase","location","fetch","search","then","response","ok","json","error","Promise","reject","data","constructor","context","initialState","records","forEach","Date","state","toastVisible","toastMessage","toastType","setFilter","bind","showError","dismissToast","componentDidMount","loadData","console","log","componentDidUpdate","prevProps","oldQuery","query","newQuery","effort_gte","effort_lte","router","push","pathname","message","setState","catch","err","id","method","render","contextTypes"],"mappings":"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","file":"0.a7ba9f61b648d4838cff.hot-update.js","sourcesContent":["import React from 'react';\r\nimport 'isomorphic-fetch';\r\nimport { Link } from 'react-router';\r\nimport { Button, Glyphicon, Table, Panel } from 'react-bootstrap';\r\nimport FaTrash from 'react-icons/lib/fa/trash';\r\n\r\nimport IssueFilter from './IssueFilter.jsx';\r\nimport Toast from './Toast.jsx';\r\n\r\nconst IssueRow = (props) => {\r\n  function onDeleteClick() {\r\n    props.deleteIssue(props.issue._id);\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td><Link to={`/issues/${props.issue._id}`}>{props.issue._id.substr(-4)}</Link></td>\r\n      <td>{props.issue.status}</td>\r\n      <td>{props.issue.owner}</td>\r\n      <td>{props.issue.created.toDateString()}</td>\r\n      <td>{props.issue.effort}</td>\r\n      <td>{props.issue.completionDate ? props.issue.completionDate.toDateString() : ''}</td>\r\n      <td>{props.issue.title}</td>\r\n      <td>\r\n        <Button bsSize=\"xsmall\" onClick={onDeleteClick}><FaTrash /></Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nIssueRow.propTypes = {\r\n  issue: React.PropTypes.object.isRequired,\r\n  deleteIssue: React.PropTypes.func.isRequired,\r\n};\r\n\r\nfunction IssueTable(props) {\r\n  const issueRows = props.issues.map(issue =>\r\n    <IssueRow key={issue._id} issue={issue} deleteIssue={props.deleteIssue} />\r\n  );\r\n  return (\r\n    <Table bordered condensed hover responsive>\r\n      <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Status</th>\r\n          <th>Owner</th>\r\n          <th>Created</th>\r\n          <th>Effort</th>\r\n          <th>Completion Date</th>\r\n          <th>Title</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{issueRows}</tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nIssueTable.propTypes = {\r\n  issues: React.PropTypes.array.isRequired,\r\n  deleteIssue: React.PropTypes.func.isRequired,\r\n};\r\n\r\nexport default class IssueList extends React.Component {\r\n  static dataFetcher({ urlBase, location }) {\r\n    return fetch(`${urlBase || ''}/api/issues${location.search}`).then(response => {\r\n      if (!response.ok) return response.json().then(error => Promise.reject(error));\r\n      return response.json().then(data => ({ IssueList: data }));\r\n    });\r\n  }\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    const issues = context.initialState.IssueList ? context.initialState.IssueList.records : [];\r\n    issues.forEach(issue => {\r\n      issue.created = new Date(issue.created);\r\n      if (issue.completionDate) {\r\n        issue.completionDate = new Date(issue.completionDate);\r\n      }\r\n    });\r\n    this.state = {\r\n      issues,\r\n      toastVisible: false, toastMessage: '', toastType: 'success',\r\n    };\r\n\r\n    this.setFilter = this.setFilter.bind(this);\r\n    this.deleteIssue = this.deleteIssue.bind(this);\r\n    this.showError = this.showError.bind(this);\r\n    this.dismissToast = this.dismissToast.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n    console.log(\"location \" + this.state.location);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const oldQuery = prevProps.location.query;\r\n    const newQuery = this.props.location.query;\r\n    if (oldQuery.status === newQuery.status\r\n        && oldQuery.effort_gte === newQuery.effort_gte\r\n        && oldQuery.effort_lte === newQuery.effort_lte) {\r\n      return;\r\n    }\r\n    this.loadData();\r\n  }\r\n\r\n  setFilter(query) {\r\n    this.props.router.push({ pathname: this.props.location.pathname, query });\r\n  }\r\n\r\n  showError(message) {\r\n    this.setState({ toastVisible: true, toastMessage: message, toastType: 'danger' });\r\n  }\r\n\r\n  dismissToast() {\r\n    this.setState({ toastVisible: false });\r\n  }\r\n\r\n  loadData() {\r\n\r\n    IssueList.dataFetcher({ location: this.props.location })\r\n    .then(data => {\r\n      const issues = data.IssueList.records;\r\n      issues.forEach(issue => {\r\n        issue.created = new Date(issue.created);\r\n        if (issue.completionDate) {\r\n          issue.completionDate = new Date(issue.completionDate);\r\n        }\r\n      });\r\n      this.setState({ issues });\r\n    }).catch(err => {\r\n      this.showError(`Error in fetching data from server: ${err}`);\r\n    });\r\n  }\r\n\r\n  deleteIssue(id) {\r\n    fetch(`/api/issues/${id}`, { method: 'DELETE' }).then(response => {\r\n      if (!response.ok) this.showError('Failed to delete issue');\r\n      else this.loadData();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Panel collapsible header=\"Filter\">\r\n          <IssueFilter setFilter={this.setFilter} initFilter={this.props.location.query} />\r\n        </Panel>\r\n        <IssueTable issues={this.state.issues} deleteIssue={this.deleteIssue} />\r\n        <Toast\r\n          showing={this.state.toastVisible} message={this.state.toastMessage}\r\n          onDismiss={this.dismissToast} bsStyle={this.state.toastType}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIssueList.propTypes = {\r\n  location: React.PropTypes.object.isRequired,\r\n  router: React.PropTypes.object,\r\n};\r\n\r\nIssueList.contextTypes = {\r\n  initialState: React.PropTypes.object,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueList.jsx"],"sourceRoot":""}