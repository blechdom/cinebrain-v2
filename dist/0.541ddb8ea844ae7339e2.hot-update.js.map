{"version":3,"sources":["webpack:///./src/Diagnostics.jsx?de26"],"names":["socket","Diagnostics","Component","constructor","props","state","text","host","port","command","response","onHostChange","bind","onPortChange","onCommandChange","sendTelnetTest","componentDidMount","on","location","pathname","mesg","setState","componentWillUnmount","off","page","event","target","value","console","log","emit","render"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;;;AACA,KAAIA,MAAJ;;AAEe,OAAMC,WAAN,SAA0B,gBAAMC,SAAhC,CAA0C;;AAEzDC,cAAYC,KAAZ,EAAkB;AACb,SAAMA,KAAN;AACJ,QAAKC,KAAL,GAAa;AACZC,UAAM,EADM;AAEZC,UAAM,WAFM;AAGZC,UAAM,IAHM;AAIZC,aAAS,KAJG;AAKZC,cAAU;AALE,IAAb;AAOA,QAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,QAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,QAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,QAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACA;AACDI,sBAAoB;AACnBhB,YAAS,uBAAT;AACAA,UAAOiB,EAAP,CAAU,KAAKb,KAAL,CAAWc,QAAX,CAAoBC,QAA9B,EAAyCC,IAAD,IAAU;AACjD,SAAKC,QAAL,CAAc,EAACf,MAAMc,IAAP,EAAd;AACA,IAFD;AAGApB,UAAOiB,EAAP,CAAU,iBAAV,EAA8BG,IAAD,IAAU;AACtC,SAAKC,QAAL,CAAc,EAACX,UAAUU,IAAX,EAAd;AACA,IAFD;AAGA;AACDE,yBAAuB;AACtBtB,UAAOuB,GAAP,CAAW,KAAKnB,KAAL,CAAWoB,IAAtB;AACA;AACDX,eAAaY,KAAb,EAAoB;AAChB,QAAKJ,QAAL,CAAc,EAAEb,MAAMiB,MAAMC,MAAN,CAAaC,KAArB,EAAd;AACF;AACDhB,eAAac,KAAb,EAAoB;AACjB,QAAKJ,QAAL,CAAc,EAAEd,MAAMkB,MAAMC,MAAN,CAAaC,KAArB,EAAd;AACF;AACDb,kBAAgBW,KAAhB,EAAuB;AACpB,QAAKJ,QAAL,CAAc,EAAEZ,SAASgB,MAAMC,MAAN,CAAaC,KAAxB,EAAd;AACF;AACFZ,mBAAiB;AACfa,WAAQC,GAAR,CAAY,qBAAZ;AACA7B,UAAO8B,IAAP,CAAY,yBAAZ,EAAuC,EAAEvB,MAAM,KAAKF,KAAL,CAAWE,IAAnB,EAAyBC,MAAM,KAAKH,KAAL,CAAWG,IAA1C,EAAgDC,SAAS,KAAKJ,KAAL,CAAWI,OAApE,EAAvC;AACD;AACAsB,WAAS;AACR,UACD;AAAA;AAAA;AACC;AAAA;AAAA;AACC;AAAA;AAAA,QAAM,gBAAN,EAAiB,UAAU,KAAKhB,cAAhC;AACQ;AAAA;AAAA;AACE;AAAA;AAAA,UAAK,4CAAL,EAAmC,IAAI,CAAvC;AAAA;AAAA,QADF;AAEE;AAAA;AAAA,UAAK,IAAI,CAAT;AACE,qEAAa,MAAK,MAAlB,EAAyB,OAAO,KAAKV,KAAL,CAAWE,IAA3C,EAAiD,UAAU,KAAKI,YAAhE;AADF;AAFF,OADR;AAOQ;AAAA;AAAA;AACE;AAAA;AAAA,UAAK,4CAAL,EAAmC,IAAI,CAAvC;AAAA;AAAA,QADF;AAEE;AAAA;AAAA,UAAK,IAAI,CAAT;AACE,qEAAa,MAAK,MAAlB,EAAyB,OAAO,KAAKN,KAAL,CAAWG,IAA3C,EAAiD,UAAU,KAAKK,YAAhE;AADF;AAFF,OAPR;AAaQ;AAAA;AAAA;AACE;AAAA;AAAA,UAAK,4CAAL,EAAmC,IAAI,CAAvC;AAAA;AAAA,QADF;AAEE;AAAA;AAAA,UAAK,IAAI,CAAT;AACE,qEAAa,MAAK,SAAlB,EAA4B,OAAO,KAAKR,KAAL,CAAWI,OAA9C,EAAuD,UAAU,KAAKK,eAAtE;AADF;AAFF,OAbR;AAmBQ;AAAA;AAAA;AACE;AAAA;AAAA,UAAK,UAAU,CAAf,EAAkB,IAAI,CAAtB;AACE;AAAA;AAAA;AACE;AAAA;AAAA,YAAQ,SAAQ,SAAhB,EAA0B,MAAK,QAA/B;AAAA;AAAA;AADF;AADF;AADF;AAnBR;AADD,KADD;AA8BC;AAAA;AAAA;AAAM,UAAKT,KAAL,CAAWK;AAAjB;AA9BD,IADC;AAkCC;AA5EsD;mBAApCT,W","file":"0.541ddb8ea844ae7339e2.hot-update.js","sourcesContent":["import React from 'react';\r\nimport 'isomorphic-fetch';\r\nimport { Button, FormGroup, FormControl, ControlLabel, Form, Col, ButtonToolbar} from 'react-bootstrap';\r\nimport { SocketProvider } from 'socket.io-react';\r\nimport SocketIOClient from 'socket.io-client';\r\nlet socket;\r\n\r\nexport default class Diagnostics extends React.Component {\r\n \r\nconstructor(props){\r\n    \tsuper(props);\r\n\tthis.state = {\r\n\t\ttext: '',\r\n\t\thost: '127.0.0.1',\r\n\t\tport: 5250,\r\n\t\tcommand: \"cls\",\r\n\t\tresponse: '',\r\n\t}\r\n\tthis.onHostChange = this.onHostChange.bind(this);\r\n\tthis.onPortChange = this.onPortChange.bind(this);\r\n\tthis.onCommandChange = this.onCommandChange.bind(this);\r\n\tthis.sendTelnetTest = this.sendTelnetTest.bind(this);\r\n}\r\ncomponentDidMount() {\r\n\tsocket = SocketIOClient();\r\n\tsocket.on(this.props.location.pathname, (mesg) => {\r\n\t\tthis.setState({text: mesg});\r\n\t});\r\n\tsocket.on('telnet-response', (mesg) => {\r\n\t\tthis.setState({response: mesg});\r\n\t});\r\n}\r\ncomponentWillUnmount() {\r\n\tsocket.off(this.props.page);\r\n}\r\nonPortChange(event) {\r\n    this.setState({ port: event.target.value });\r\n }\r\n onHostChange(event) {\r\n    this.setState({ host: event.target.value });\r\n }\r\n onCommandChange(event) {\r\n    this.setState({ command: event.target.value });\r\n }\r\nsendTelnetTest() {\r\n  console.log(\"sending Telnet Test\");\r\n  socket.emit('diagnostics-send-telnet', { host: this.state.host, port: this.state.port, command: this.state.command});\r\n}\r\n render() {\r\n \treturn (\r\n\t<div>\r\n\t\t<div>\r\n\t\t\t<Form horizontal onSubmit={this.sendTelnetTest}>\r\n\t          <FormGroup>\r\n\t            <Col componentClass={ControlLabel} sm={3}>Host</Col>\r\n\t            <Col sm={9}>\r\n\t              <FormControl name=\"host\" value={this.state.host} onChange={this.onHostChange} />\r\n\t            </Col>\r\n\t          </FormGroup>\r\n\t          <FormGroup>\r\n\t            <Col componentClass={ControlLabel} sm={3}>Port</Col>\r\n\t            <Col sm={9}>\r\n\t              <FormControl name=\"port\" value={this.state.port} onChange={this.onPortChange} />\r\n\t            </Col>\r\n\t          </FormGroup>\r\n\t          <FormGroup>\r\n\t            <Col componentClass={ControlLabel} sm={3}>Telnet Command</Col>\r\n\t            <Col sm={9}>\r\n\t              <FormControl name=\"command\" value={this.state.command} onChange={this.onCommandChange} />\r\n\t            </Col>\r\n\t          </FormGroup>\r\n\t          <FormGroup>\r\n\t            <Col smOffset={3} sm={6}>\r\n\t              <ButtonToolbar>\r\n\t                <Button bsStyle=\"primary\" type=\"submit\">Send Telnet Command</Button>\r\n\t              </ButtonToolbar>\r\n\t            </Col>\r\n\t          </FormGroup>\r\n\t        </Form>\r\n\t\t</div>\r\n\t\t<div>{this.state.response}</div>\r\n\t</div>\r\n    );\r\n  };\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Diagnostics.jsx"],"sourceRoot":""}