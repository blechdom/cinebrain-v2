{"version":3,"sources":["webpack:///./src/DeviceMenu.jsx?42ea"],"names":["socket","DeviceMenu","Component","dataFetcher","urlBase","location","fetch","search","then","response","ok","json","error","Promise","reject","data","constructor","props","context","devices","initialState","records","state","deviceOptions","onDeviceSelect","bind","componentDidMount","loadData","on","pathname","mesg","setState","text","componentWillUnmount","off","page","forEach","device","push","_id","device_number","name","catch","err","showError","event","console","log","target","value","emit","render","propTypes","PropTypes","object","isRequired","router","contextTypes"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;AACA,KAAIA,MAAJ;;AAEe,OAAMC,UAAN,SAAyB,gBAAMC,SAA/B,CAAyC;;AAEtD,UAAOC,WAAP,OAA0C;AAAA,SAArBC,OAAqB,QAArBA,OAAqB;AAAA,SAAZC,QAAY,QAAZA,QAAY;;AACxC,YAAOC,MAAO,GAAEF,WAAW,EAAG,eAAcC,SAASE,MAAO,EAArD,EAAwDC,IAAxD,CAA6DC,YAAY;AAC9E,WAAI,CAACA,SAASC,EAAd,EAAkB,OAAOD,SAASE,IAAT,GAAgBH,IAAhB,CAAqBI,SAASC,QAAQC,MAAR,CAAeF,KAAf,CAA9B,CAAP;AAClB,cAAOH,SAASE,IAAT,GAAgBH,IAAhB,CAAqBO,SAAS,EAAEd,YAAYc,IAAd,EAAT,CAArB,CAAP;AACD,MAHM,CAAP;AAID;;AAEDC,eAAYC,KAAZ,EAAmBC,OAAnB,EAA2B;AACzB,WAAMD,KAAN,EAAaC,OAAb;AACA,WAAMC,UAAUD,QAAQE,YAAR,CAAqBnB,UAArB,GAAkCiB,QAAQE,YAAR,CAAqBnB,UAArB,CAAgCoB,OAAlE,GAA4E,EAA5F;AACA,UAAKC,KAAL,GAAa;AACXH;AADW,MAAb;AAGF,UAAKI,aAAL,GAAqB,EAArB;AACA,UAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;AACDC,uBAAoB;AAChB,UAAKC,QAAL;AACH3B,cAAS,uBAAT;AACOA,YAAO4B,EAAP,CAAU,KAAKX,KAAL,CAAWZ,QAAX,CAAoBwB,QAA9B,EAAyCC,IAAD,IAAU;AAC1C,YAAKC,QAAL,CAAc,EAACC,MAAMF,IAAP,EAAd;AACP,MAFD;AAGL;AACHG,0BAAuB;AACfjC,YAAOkC,GAAP,CAAW,KAAKjB,KAAL,CAAWkB,IAAtB;AACP;AACCR,cAAW;AACT1B,gBAAWE,WAAX,CAAuB,EAAEE,UAAU,KAAKY,KAAL,CAAWZ,QAAvB,EAAvB,EACCG,IADD,CACMO,QAAQ;AACZ,aAAMI,UAAUJ,KAAKd,UAAL,CAAgBoB,OAAhC;AACAF,eAAQiB,OAAR,CAAgBC,UAAU;AACxB,cAAKd,aAAL,CAAmBe,IAAnB,CAAwB;AAAA;AAAA,aAAQ,KAAKD,OAAOE,GAApB,EAAyB,OAAOF,OAAOG,aAAvC;AAAuDH,kBAAOI;AAA9D,UAAxB;AACD,QAFD;AAGA,YAAKV,QAAL,CAAc,EAAEZ,gBAAF,EAAd;AACD,MAPD,EAOGuB,KAPH,CAOSC,OAAO;AACd,YAAKC,SAAL,CAAgB,uCAAsCD,GAAI,EAA1D;AACD,MATD;AAUD;;AAEDnB,kBAAeqB,KAAf,EAAsB;AACvBC,aAAQC,GAAR,CAAY,aAAaF,MAAMG,MAAN,CAAaC,KAA1B,GAAkC,UAAlC,GAA+CJ,MAAMG,MAAN,CAAahB,IAAxE;AACAhC,YAAOkD,IAAP,CAAY,aAAZ,EAA2BL,MAAMG,MAAN,CAAaC,KAAxC;AACE;AACHE,YAAS;AACP,YACI;AAAA;AAAA;AACA;AAAA;AAAA,WAAa,gBAAe,QAA5B,EAAqC,UAAU,KAAK3B,cAApD;AACmB,cAAKD;AADxB;AADA,MADJ;AAOC;AArDqD;mBAAnCtB,U;AAuDrBA,YAAWmD,SAAX,GAAuB;AACrB/C,aAAU,gBAAMgD,SAAN,CAAgBC,MAAhB,CAAuBC,UADZ;AAErBC,WAAQ,gBAAMH,SAAN,CAAgBC;AAFH,EAAvB;;AAKArD,YAAWwD,YAAX,GAA0B;AACxBrC,iBAAc,gBAAMiC,SAAN,CAAgBC;AADN,EAA1B,C","file":"0.88440ae29b1710902e1b.hot-update.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom'\nimport _ from \"lodash\";\nimport 'isomorphic-fetch';\nimport { Col, Row, FormGroup, FormControl, ControlLabel, Button, Table, Panel, Glyphicon } from 'react-bootstrap';\nimport SocketIOClient from 'socket.io-client';\nlet socket;\n\nexport default class DeviceMenu extends React.Component {\n\n  static dataFetcher({ urlBase, location }) {\n    return fetch(`${urlBase || ''}/api/devices${location.search}`).then(response => {\n      if (!response.ok) return response.json().then(error => Promise.reject(error));\n      return response.json().then(data => ({ DeviceMenu: data }));\n    });\n  }\n\n  constructor(props, context){\n    super(props, context);\n    const devices = context.initialState.DeviceMenu ? context.initialState.DeviceMenu.records : [];\n    this.state = {\n      devices,\n    };\n  this.deviceOptions = [];\n  this.onDeviceSelect = this.onDeviceSelect.bind(this);\n}\ncomponentDidMount() {\n    this.loadData();\n\tsocket = SocketIOClient();\n        socket.on(this.props.location.pathname, (mesg) => {\n                this.setState({text: mesg});\n        });\n  }\ncomponentWillUnmount() {\n        socket.off(this.props.page);\n}\n  loadData() {\n    DeviceMenu.dataFetcher({ location: this.props.location })\n    .then(data => {\n      const devices = data.DeviceMenu.records;\n      devices.forEach(device => {\n        this.deviceOptions.push(<option key={device._id} value={device.device_number}>{device.name}</option>);\n      });\n      this.setState({ devices });\n    }).catch(err => {\n      this.showError(`Error in fetching data from server: ${err}`);\n    });\n  }\n\n  onDeviceSelect(event) {\n\tconsole.log(\"device #\" + event.target.value + \" called \" + event.target.text);\n\tsocket.emit('device-menu', event.target.value); \n  }\nrender() {\n  return (\n      <div>\n      <FormControl componentClass=\"select\" onChange={this.onDeviceSelect}>\n                        {this.deviceOptions}\n                </FormControl>\n\t</div>\n    );\n  }\n}\nDeviceMenu.propTypes = {\n  location: React.PropTypes.object.isRequired,\n  router: React.PropTypes.object,\n};\n\nDeviceMenu.contextTypes = {\n  initialState: React.PropTypes.object,\n}; \n\n\n\n// WEBPACK FOOTER //\n// ./src/DeviceMenu.jsx"],"sourceRoot":""}