{"version":3,"sources":["webpack:///./server/index.js?d43f"],"names":["install","appModule","require","db","server","websocket","connect","then","connection","createServer","setDb","on","app","listen","console","log","socket","id","message","catch","error","module","hot","accept","removeListener"],"mappings":";;;;;;;;AAAA;;;;AAEA;;AACA;;;;AACA;;AACA;;;;;;AAJA,4BAAiBA,OAAjB;;;AAOA,KAAIC,YAAY,mBAAAC,CAAQ,CAAR,CAAhB;AACA,KAAIC,EAAJ;AACA,KAAIC,MAAJ;AACA,KAAIC,SAAJ;;AAEA,sBAAYC,OAAZ,CAAoB,+BAApB,EAAqDC,IAArD,CAA0DC,cAAc;AACtEL,QAAKK,UAAL;AACAJ,YAAS,eAAKK,YAAL,EAAT;AACAR,aAAUS,KAAV,CAAgBP,EAAhB;AACAC,UAAOO,EAAP,CAAU,SAAV,EAAqBV,UAAUW,GAA/B;AACAR,UAAOS,MAAP,CAAc,IAAd,EAAoB,MAAM;AACxBC,aAAQC,GAAR,CAAY,0BAAZ;AACD,IAFD;AAGAV,eAAY,sBAASD,MAAT,CAAZ;AACAC,aAAUM,EAAV,CAAa,YAAb,EAA4BK,MAAD,IAAY;AACjCF,aAAQC,GAAR,CAAY,0BAA0BC,OAAOC,EAA7C;;AAEAD,YAAOL,EAAP,CAAU,YAAV,EAAwB,MAAM;AACtBG,eAAQC,GAAR,CAAY,mBAAZ;AACP,MAFD;AAGPC,YAAOL,EAAP,CAAU,oBAAV,EAAiCO,OAAD,IAAa;AAC9BJ,eAAQC,GAAR,CAAY,yBAAyBG,OAArC;AACP,MAFR;AAGAF,YAAOL,EAAP,CAAU,aAAV,EAA0BO,OAAD,IAAa;AACvBJ,eAAQC,GAAR,CAAY,2BAA2BG,OAAvC;AACP,MAFR;AAGE,IAZD;AAaD,EAtBD,EAsBGC,KAtBH,CAsBSC,SAAS;AAChBN,WAAQC,GAAR,CAAY,QAAZ,EAAsBK,KAAtB;AACD,EAxBD;;AA0BA,KAAI,IAAJ,EAAgB;AACdC,UAAOC,GAAP,CAAWC,MAAX,CAAkB,CAAlB,EAAiC,MAAM;AACrCnB,YAAOoB,cAAP,CAAsB,SAAtB,EAAiCvB,UAAUW,GAA3C;AACAX,iBAAY,mBAAAC,CAAQ,CAAR,CAAZ,CAFqC,CAEG;AACxCD,eAAUS,KAAV,CAAgBP,EAAhB;AACAC,YAAOO,EAAP,CAAU,SAAV,EAAqBV,UAAUW,GAA/B;AACD,IALD;AAMD,E","file":"0.5c0f0ff070cff1e0a64d.hot-update.js","sourcesContent":["import SourceMapSupport from 'source-map-support';\nSourceMapSupport.install();\nimport 'babel-polyfill';\nimport http from 'http';\nimport { MongoClient } from 'mongodb';\nimport socketio from 'socket.io';\n\n\nlet appModule = require('./server.js');\nlet db;\nlet server;\nlet websocket;\n\nMongoClient.connect('mongodb://localhost/cinebrain').then(connection => {\n  db = connection;\n  server = http.createServer();\n  appModule.setDb(db);\n  server.on('request', appModule.app);\n  server.listen(3000, () => {\n    console.log('App started on port 3000');\n  });\n  websocket = socketio(server);\n  websocket.on('connection', (socket) => {\n        console.log(\"user connected from: \" + socket.id);\n\n        socket.on('disconnect', () => {\n                console.log('user disconnected')\n        });\n\tsocket.on('diagnostics-button', (message) => {\n                console.log(\"and the message is: \" + message);\n        });\n\tsocket.on('device-menu', (message) => {\n                console.log(\"the device number is: \" + message);\n        });\n  });\n}).catch(error => {\n  console.log('ERROR:', error);\n});\n\nif (module.hot) {\n  module.hot.accept('./server.js', () => {\n    server.removeListener('request', appModule.app);\n    appModule = require('./server.js');     // eslint-disable-line\n    appModule.setDb(db);\n    server.on('request', appModule.app);\n  });\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./server/index.js"],"sourceRoot":""}