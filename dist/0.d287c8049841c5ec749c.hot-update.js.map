{"version":3,"sources":["webpack:///./src/MIDIDiagnostics.jsx?edcc"],"names":["socket","MIDIDiagnostics","Component","constructor","props","context","state","channel","program_num","cc_num","pitch_num","velocity","onMidiChannelChange","bind","onProgramNumChange","handNumberInput","handleNumberInput","sendProgramChangeTest","componentDidMount","on","mesg","setState","response","componentWillUnmount","off","page","event","target","value","console","log","emit","number","input_value","id","render","onPortChange","i"],"mappings":"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","file":"0.d287c8049841c5ec749c.hot-update.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport _ from \"lodash\";\r\nimport 'isomorphic-fetch';\r\nimport {Button, FormGroup, FormControl, ControlLabel, Form, Row, Col, ButtonToolbar} from 'react-bootstrap';\r\nimport { SocketProvider } from 'socket.io-react';\r\nimport SocketIOClient from 'socket.io-client';\r\nlet socket;\r\n\r\nexport default class MIDIDiagnostics extends React.Component {\r\n\r\nconstructor(props, context){\r\n  super(props, context);\r\n  this.state = {\r\n      channel: 1,\r\n      program_num: 1,\r\n      cc_num: 1,\r\n      pitch_num: 1,\r\n      velocity: 0,\r\n  };\r\n  this.onMidiChannelChange = this.onMidiChannelChange.bind(this);\r\n  this.onProgramNumChange = this.onProgramNumChange.bind(this);\r\n  this.handNumberInput = this.handleNumberInput.bind(this);\r\n  this.sendProgramChangeTest = this.sendProgramChangeTest.bind(this);\r\n}\r\ncomponentDidMount() {\r\n  socket = SocketIOClient();\r\n  socket.on('telnet-response', (mesg) => {\r\n    this.setState({response: mesg});\r\n  });\r\n  \r\n}\r\ncomponentWillUnmount() {\r\n  socket.off(this.props.page);\r\n}\r\nonMidiChannelChange(event){\r\n  this.setState({ channel: event.target.value });\r\n}\r\nonProgramNumChange(event){\r\n  this.setState({ program_num: event.target.value });\r\n}\r\nsendProgramChangeTest(){\r\n  console.log(\"sending MIDI Program Change test...\");\r\n  socket.emit('midi-program', {number:input_value, channel:this.state.channel});\r\n}\r\nhandleNumberInput(event) {\r\n  console.log(event.target.id + ': ' + event.target.value);\r\n  let input_value = event.target.value;\r\n  switch (event.target.id) {\r\n    case 'loop-input':\r\n      socket.emit('midi-program', {number:input_value, channel:0});\r\n      break;\r\n    default:\r\n  console.log('ERROR: Input does not exist');\r\n  }\r\n}\r\nrender() {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Form horizontal onSubmit={this.sendProgramChangeTest}>\r\n          <FormGroup>\r\n            <Col componentClass={ControlLabel} sm={3}>Channel</Col>\r\n            <Col sm={9}>\r\n              <FormControl name=\"channel\" value={this.state.channel} onChange={this.onMidiChannelChange} />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Col componentClass={ControlLabel} sm={3}>Port</Col>\r\n            <Col sm={9}>\r\n              <FormControl type=\"number\" name=\"program_num\" value={this.state.program_num} onChange={this.onPortChange} />\r\n                <input type=\"number\" min=\"0\" max=\"99\" value={this.state.program_num} id={i} onChange={this.handleNumberInput}/>\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Col smOffset={3} sm={6}>\r\n              <ButtonToolbar>\r\n                <Button bsStyle=\"primary\" type=\"submit\">Send Program Change</Button>\r\n              </ButtonToolbar>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/MIDIDiagnostics.jsx"],"sourceRoot":""}